# -*- coding: utf-8 -*-
"""M5-Assignment level-2(AUC and ROC curve).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LVArAfKJJsdWRbjK6gSLICSjluXeTFX5
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

from google.colab import files
files.upload()

df=pd.read_csv('/content/Social_Network_Ads (1).csv')

df

df.info()

df.shape

df.isnull().sum()

df.describe()

df_cor=df.corr()
df_cor

sns.heatmap(df_cor,vmax=0.7,square=True)

df['Gender']=df['Gender'].apply({'Male':0,'Female':1}.get)

X=df.drop('Purchased',axis=1)
y=df.Purchased

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=0)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

from sklearn.neighbors import KNeighborsClassifier

cf=KNeighborsClassifier(n_neighbors=5,metric='minkowski',p=5)
cf.fit(X_train,y_train)

y_predict=cf.predict(X_test)

from sklearn.metrics import accuracy_score

print('Accuracy Score',accuracy_score(y_test,y_predict))

from sklearn.metrics import classification_report

print(classification_report(y_test,y_predict))

from sklearn.metrics import roc_curve,roc_auc_score

fpr,tpr,_=roc_curve(y_test,y_pred)

score=roc_auc_score(y_test,y_pred)
print(score)

plt.plot(fpr,tpr, marker='o', label='Logistic')
plt.xlabel('False positive rate')
plt.ylabel('True positive rate')
plt.legend()
plt.show()

from sklearn.linear_model import LogisticRegression

lr=LogisticRegression()
lr.fit(X_train,y_train)

y_pred=lr.predict(X_test)

from sklearn.metrics import accuracy_score

print('Accuracy Score',accuracy_score(y_test,y_pred))

from sklearn.metrics import classification_report

print(classification_report(y_test,y_pred))

from sklearn.metrics import roc_curve,roc_auc_score

fpr,tpr,_=roc_curve(y_test,y_pred)

score=roc_auc_score(y_test,y_pred)
print(score)

plt.plot(fpr,tpr, marker='o', label='Logistic')
plt.xlabel('False positive rate')
plt.ylabel('True positive rate')
plt.legend()
plt.show()